/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    jacoco
    id("org.sonarqube") version "5.0.0.4638"
}

allprojects {
    repositories {
        // Use Maven Central for resolving dependencies.
        mavenCentral()
    }

    apply(plugin="org.sonarqube")
    sonar {
        properties {
            property("sonar.projectKey", "nikfarjam_gradle-multimodule")
            property("sonar.organization", "nikfarjam") 
            property("sonar.host.url", "https://sonarcloud.io")
            property("sonar.sourceEncoding", "UTF-8")
            property ("sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml")
        }
    }

    plugins.withId("jacoco") {
        this@allprojects.tasks {
            val jacocoTestReport = "jacocoTestReport"(JacocoReport::class) {
                reports {
                    xml.required.set(true)
                }
            }

            val test = "test"(Test::class) {
                // Use JUnit Platform for unit tests.
                useJUnitPlatform()
                finalizedBy(jacocoTestReport)
            }
        }
    }

    // tasks.named("sonar") {
    //     dependsOn("check")
    //     dependsOn("jacocoTestReport")
    // }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

